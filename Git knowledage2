第一步：
cd ~/desktop 修改默认的路径至指定路径（注意cd后的空格）
cd gitTut进入指定的文件
第二步：添加用户名和 用户
git config --global user.name "Morvan Zhou"
git config --global user.email "ws@qq.com"
git config user.name(显示用户名）
第三步：
clear（清空屏幕）
第四步：
git init
Initialized empty Git repository in /Users...
如果文件夹中还没有任何的文件, 它返回出来一句话告诉我们已经建立了一个空的 git 管理库.
第五步：
$ ls 就能看到文件夹中的所有文件

第六步：新建、保存及修改
$ touch 1.py  建立一个新的 1.py 文件
$ git status  查看版本库的状态
$ git add 1.py用 add 把它添加进版本库 (staged)
$ git add .   如果想一次性添加文件夹中所有未被添加的文件(注意后面带一个点)
$ git commit -m "create 1.py" 添加好了1.py文件, 最后一步就是提交这次的改变, 并在 -m 自定义这次改变的信息。
在 git 中, 每一次提交(commit)的修改, 都会被单独的保存起来. 也可以说 git 的中的所有文件都是一次次修改累积起来的. 

$ git log 查看版本库有那些操作的过程. 可以看到Author的名字和email信息了.

$ git status  对1.py文件进行一次修改,用$ git status我们就能在 status 中看到修改但还没被提交的信息了.
之后需要我们先把这次修改添加 (add) 到可被提交 (commit) 的状态, 然后再提交 (commit) 这次的修改
再次查看 log, 现在我们就能看到 create 1.py 和 change 1 这两条修改信息了. 而且做出这两条 commit 的 ID, 修改的 Author, 修改 Date 也被显示在上面.


